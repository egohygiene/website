---
import type { CategoryGroup } from '../data/categories';
const { groups } = Astro.props as { groups: CategoryGroup[] };
---
<div class="categories" id="category-carousel">
  {groups.map((group) => (
    <section class="group" data-group={group.group}>
      <h3>{group.group}</h3>
      <div class="carousel">
        {group.categories.map((cat) => (
          <a class="card" href={`/blogs/categories/${cat.slug}/`} style={`background-image:url('${cat.image}');`}>
            <span>{cat.name}</span>
          </a>
        ))}
      </div>
    </section>
  ))}
</div>

<style>
  .categories {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }
  .categories.visible {
    opacity: 1;
    transform: none;
  }
  .group h3 {
    margin: 0 0 0.5rem 0;
  }
  .carousel {
    display: flex;
    overflow-x: auto;
    gap: 1rem;
    scroll-snap-type: x mandatory;
    padding-bottom: 0.5rem;
  }
  .card {
    position: relative;
    flex: 0 0 auto;
    width: 180px;
    height: 100px;
    border-radius: 12px;
    overflow: hidden;
    background-size: cover;
    background-position: center;
    color: white;
    text-decoration: none;
    scroll-snap-align: start;
  }
  .card::before {
    content: '';
    position: absolute;
    inset: 0;
    background: rgba(0,0,0,0.3);
    transition: background 0.3s ease;
  }
  .card:hover::before {
    background: rgba(0,0,0,0.5);
  }
  .card span {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    padding: 0.5rem;
    font-weight: 700;
  }
</style>

<script>
  const el = document.getElementById('category-carousel');
  if (el) {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((e) => {
        if (e.isIntersecting) el.classList.add('visible');
      });
    }, { threshold: 0.1 });
    observer.observe(el);
  }
</script>
