---
import type { GetStaticPathsResult } from "astro";
import { SynapseLayout } from '@egohygiene/components';
import { getSynapses, mapSynapsesBySlug, type Synapse } from '@egohygiene/models';
import type { AstroParams } from "@egohygiene/types/astro";

type Params = { slug: string };

export async function getStaticPaths(): Promise<GetStaticPathsResult> {
  const synapses: Synapse[] = await getSynapses();
  return synapses.map((synapse) => ({ params: { slug: synapse.slug } }));
}

const { slug } = Astro.params as AstroParams<Params>;
const synapseMap: Record<string, Synapse> = await mapSynapsesBySlug();
const synapse: Synapse = synapseMap[slug];
if (!synapse) {
  throw new Error(`Synapse not found: ${slug}`);
}
---

<SynapseLayout synapse={synapse} />
